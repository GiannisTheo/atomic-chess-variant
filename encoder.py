# -*- coding: utf-8 -*-
"""encoder.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZBASjDV0372uMdT8MBo4xxDnxF8cM0TS
"""

import numpy as np

def pos(char):
  char = char.lower()
  # rook=0, knight=1, bishop=2, queen=3, king=4, pawn=5
  if char == 'r':
    return 0
  elif char == 'n':
    return 1
  elif char == 'b':
    return 2
  elif char == 'q':
    return 3 
  elif char == 'k':
    return 4
  elif char == 'p':
    return 5

def value(char):
  if (char >= 'A' and char <= 'Z'):
    return 1
 
  elif (char >= 'a' and char <= 'z'):
    return -1

def encode(fen):
  # rook -> 0, knight -> 1, bishop -> 2, queen -> 3, king -> 4, pawn -> 5, to move -> 6, en_passant -> 7, castle -> 8
  pieces = fen.split(" ")[0].split('/')
  plays = fen.split(" ")[1]
  castling_rights = fen.split(" ")[2]
  en_passant = fen.split(" ")[3]

  x = np.zeros((9,8,8))

  # pieces encoding
  for i in range(8):
    row = i
    column = 0
    for j in range(len(pieces[i])):
      if pieces[i][j].isnumeric():
        column = column + int(pieces[i][j])
      else:
        x[pos(pieces[i][j]),row,column] = value(pieces[i][j])
        #print(pieces[i][j],pos(pieces[i][j]),row,column,value(pieces[i][j]))
        column = column + 1
  
  # player to move encoding
  if plays == 'w':
    x[6,:,:]=1
  else:
    x[6,:,:]=-1
  
  # en passant encoding
  if en_passant != '-':
    x[7,8-ord(en_passant[0])+97,int(en_passant[1])]=1
  
  # castling rights encoding
  if castling_rights != '-':
    for c in range(len(castling_rights)):
      if castling_rights[c] == 'q':
        x[8,0:4,0:4] = 1
      elif castling_rights[c] == 'k':
        x[8,0:4,4:8] = 1
      elif castling_rights[c] == 'Q':
        x[8,4:8,0:4] = 1
      elif castling_rights[c] == 'K':
        x[8,4:8,4:8] = 1
  return x